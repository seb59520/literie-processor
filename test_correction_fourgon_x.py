#!/usr/bin/env python3
"""
Test de la correction du prompt LLM pour la d√©tection fourgon
Le LLM doit maintenant retourner "X" au lieu du texte complet
"""

import json
import re

def get_depyper_text():
    """R√©cup√©rer le texte de test DEPYPER"""
    return """--- PAGE 1 ---
SAS Literie Westelynck au Capital de 23 100 Euros - 525 RD 642 - 59190 BORRE
T√®l. 03.28.48.04.19 - Fax 03.28.41.02.74 - contact@lwest.fr
Siret 429 352 891 00015 - APE 3103Z - CEE FR50 429 352 891
Domiciliation Bancaire : Cr√©dit Agricole d'Hazebrouck FR76 1670 6050 1650 4613 2602 3411/1
Maison
Fond√©e en
1899Mr et Me DEPYPER CHRISTIAN & ANNIE
285 RUE DE WALLON CAPPEL
CAMPING DES 8 RUES
59190 WALLON CAPPEL
Num√©ro Date Code client Mode de r√®glement
CM00009568 15/07/2025 DEPYCHWAL CBDate de validiteCOMMANDE
Commercial : P. ALINE
www.literie-westelynck.fr
Remise % Montant TTC P.U. TTC Qt√© Description
0,00 0,00 0,00 0,00 COMMANDE VALID√âE PAR T√âL√âPHONE
0,00 0,00 0,00 0,00 MOBILHOME AVEC CHAMBRE 160/ 190  (158 cm entre les 2 chevets)
0,00 0,00 0,00 0,00
0,00 511,50 511,50 1,00 MATELAS 1 PI√àCE -MOUSSE RAINUR √âE 7 ZONES DIFF√âRENCI√âES M√âDIUM
(50KG/ M3) -HOUSSE MATELASS √âETENCEL LUXE 3D LAVABLE A 40¬∞  79/ 189/ 20 -
Mme Gauche
Dont Eco -Part. M obilier (TTC) : 5,50‚Ç¨ sur P.U : 506,00‚Ç¨
0,00 511,50 511,50 1,00 MATELAS 1 PI√àCE -MOUSSE RAINUR √âE 7 ZONES DIFF√âRENCI√âES FERME
(55KG/ M3) -HOUSSE MATELASS √âETENCEL LUXE 3D LAVABLE A 40¬∞  79/ 189/ 20 -Mr
Droite
Dont Eco -Part. M obilier (TTC) : 5,50‚Ç¨ sur P.U : 506,00‚Ç¨
0,00 0,00 0,00 0,00
0,00 0,00 0,00 1,00 LIVRAISON ET INSTALLATION OFFERTES AU CAMPING DES 8 RUES A WALLON
CAPPEL
0,00 0,00 0,00 0,00
0,00 0,00 0,00 1,00 PRIX NETS TTC 2023 + ECOTAXES
ACOMPTE DE 343 ‚Ç¨ EN CB A LA COMMANDE ET SOLDE DE 680 ‚Ç¨ A LA LIVRAISON
0,00 0,00 0,00 0,00 D√âLAI : Fin ao√ªt
Taux Base HT Montant TVA
168,66 843,34 20,00
Port HT
Total TTC
Acomptes
Net √† payer0,00
1 023,00
343,00
680,00 ‚Ç¨"""

def verifier_prompt_corrige():
    """V√©rifie que le prompt a √©t√© corrig√©"""
    print("üîç V√âRIFICATION DE LA CORRECTION DU PROMPT")
    print("=" * 60)
    
    try:
        with open('backend_interface.py', 'r', encoding='utf-8') as f:
            contenu = f.read()
        
        # V√©rifier que les exemples retournent "X"
        exemples_corrects = [
            'fourgon_C58: "X"',
            'emporte_client_C57: "X"',
            'transporteur_C59: "X"',
            'LIVRAISON ET INSTALLATION OFFERTES AU CAMPING" ‚Üí fourgon_C58: "X"'
        ]
        
        print("‚úÖ V√©rification des exemples corrig√©s :")
        for exemple in exemples_corrects:
            if exemple in contenu:
                print(f"   ‚úÖ {exemple}")
            else:
                print(f"   ‚ùå {exemple}")
        
        print()
        
        # V√©rifier que la structure JSON est claire
        if 'X si livraison fourgon/sur site, null sinon' in contenu:
            print("‚úÖ Structure JSON clarifi√©e")
        else:
            print("‚ùå Structure JSON pas clarifi√©e")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lecture fichier: {e}")
        return False

def simuler_extraction_llm_corrigee():
    """Simule l'extraction LLM corrig√©e"""
    print("\nü§ñ SIMULATION D'EXTRACTION LLM CORRIG√âE")
    print("=" * 60)
    
    print("üìã JSON attendu APR√àS correction (avec 'X') :")
    
    json_corrige = {
        "mode_mise_a_disposition": {
            "emporte_client_C57": None,  # Pas d'enl√®vement client
            "fourgon_C58": "X",          # "X" car livraison sur site d√©tect√©e
            "transporteur_C59": None     # Pas de transporteur externe
        }
    }
    
    print(json.dumps(json_corrige, indent=2, ensure_ascii=False))
    
    print("\nüéØ DIFF√âRENCE AVANT/APR√àS :")
    print("   ‚ùå AVANT: fourgon_C58: 'LIVRAISON ET INSTALLATION OFFERTES AU CAMPING...'")
    print("   ‚úÖ APR√àS: fourgon_C58: 'X'")
    
    print("\n‚úÖ Avantages de la correction :")
    print("   üìä Format Excel correct (cellule coch√©e avec 'X')")
    print("   üîç D√©tection binaire claire (pr√©sent/absent)")
    print("   üìã Donn√©es structur√©es pour l'export")

def analyser_texte_depyper():
    """Analyse le texte DEPYPER pour confirmer la d√©tection"""
    print("\nüîç ANALYSE DU TEXTE DEPYPER")
    print("=" * 60)
    
    texte = get_depyper_text()
    
    # Recherche des mots-cl√©s de livraison
    mots_cles = ["LIVRAISON", "INSTALLATION", "CAMPING", "OFFERTES"]
    
    print("üéØ Mots-cl√©s de livraison trouv√©s :")
    for mot in mots_cles:
        if mot in texte.upper():
            print(f"   ‚úÖ '{mot}' pr√©sent")
        else:
            print(f"   ‚ùå '{mot}' absent")
    
    print()
    
    # Recherche de la phrase compl√®te
    phrase_livraison = "LIVRAISON ET INSTALLATION OFFERTES AU CAMPING DES 8 RUES A WALLON CAPPEL"
    
    if phrase_livraison in texte:
        print(f"‚úÖ Phrase de livraison compl√®te trouv√©e :")
        print(f"   '{phrase_livraison}'")
        print()
        print("üéØ Le LLM doit maintenant d√©tecter :")
        print("   fourgon_C58: 'X'")
    else:
        print("‚ùå Phrase de livraison non trouv√©e")

def main():
    """Fonction principale"""
    print("üîß TEST DE LA CORRECTION FOURGON_C58 = 'X'")
    print("=" * 70)
    
    # V√©rifier la correction du prompt
    verifier_prompt_corrige()
    
    # Simuler l'extraction corrig√©e
    simuler_extraction_llm_corrigee()
    
    # Analyser le texte DEPYPER
    analyser_texte_depyper()
    
    print("\nüéØ CONCLUSION :")
    print("‚úÖ Le prompt LLM a √©t√© corrig√© pour retourner 'X'")
    print("‚úÖ La commande DEPYPER contient clairement des informations de livraison")
    print("‚úÖ Le LLM doit maintenant d√©tecter : fourgon_C58 = 'X'")
    print("‚úÖ L'export Excel aura la bonne logique (cellule coch√©e)")
    
    print("\nüöÄ PROCHAINES √âTAPES :")
    print("1. Red√©marrez MatelasApp")
    print("2. Testez avec le PDF DEPYPER")
    print("3. V√©rifiez que fourgon_C58 = 'X' dans l'Excel")

if __name__ == "__main__":
    main()

