#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test avec prompt ultra-simple pour forcer l'extraction
"""

import sys
import os

def get_ultra_simple_prompt():
    """R√©cup√©rer le prompt ultra-simple"""
    try:
        with open("prompt_ultra_simple.txt", "r", encoding="utf-8") as f:
            return f.read()
    except FileNotFoundError:
        return None

def get_depyper_text():
    """R√©cup√©rer le texte DEPYPER"""
    return """--- PAGE 1 ---
SAS Literie Westelynck au Capital de 23 100 Euros - 525 RD 642 - 59190 BORRE
T√®l. 03.28.48.04.19 - Fax 03.28.41.02.74 - contact@lwest.fr
Siret 429 352 891 00015 - APE 3103Z - CEE FR50 429 352 891
Domiciliation Bancaire : Cr√©dit Agricole d'Hazebrouck FR76 1670 6050 1650 4613 2602 3411/1
Maison
Fond√©e en
1899Mr et Me DEPYPER CHRISTIAN & ANNIE
285 RUE DE WALLON CAPPEL
CAMPING DES 8 RUES
59190 WALLON CAPPEL
Num√©ro Date Code client Mode de r√®glement
CM00009568 15/07/2025 DEPYCHWAL CBDate de validit√©COMMANDE
Commercial : P. ALINE
www.literie-westelynck.fr
Remise % Montant TTC P.U. TTC Qt√© Description
0,00 0,00 0,00 0,00 COMMANDE VALID√âE PAR T√âL√âPHONE
0,00 0,00 0,00 0,00 MOBILHOME AVEC CHAMBRE 160/ 190  (158 cm entre les 2 chevets)
0,00 0,00 0,00 0,00
0,00 511,50 511,50 1,00 MATELAS 1 PI√àCE -MOUSSE RAINUR √âE 7 ZONES DIFF√âRENCI√âES M√âDIUM
(50KG/ M3) -HOUSSE MATELASS √âETENCEL LUXE 3D LAVABLE A 40¬∞  79/ 189/ 20 -
Mme Gauche
Dont Eco -Part. M obilier (TTC) : 5,50‚Ç¨ sur P.U : 506,00‚Ç¨
0,00 511,50 511,50 1,00 MATELAS 1 PI√àCE -MOUSSE RAINUR √âE 7 ZONES DIFF√âRENCI√âES FERME
(55KG/ M3) -HOUSSE MATELASS √âETENCEL LUXE 3D LAVABLE A 40¬∞  79/ 189/ 20 -Mr
Droite
Dont Eco -Part. M obilier (TTC) : 5,50‚Ç¨ sur P.U : 506,00‚Ç¨
0,00 0,00 0,00 0,00
0,00 0,00 0,00 1,00 LIVRAISON ET INSTALLATION OFFERTES AU CAMPING DES 8 RUES A WALLON
CAPPEL
0,00 0,00 0,00 0,00
0,00 0,00 0,00 1,00 PRIX NETS TTC 2023 + ECOTAXES
ACOMPTE DE 343 ‚Ç¨ EN CB A LA COMMANDE ET SOLDE DE 680 ‚Ç¨ A LA LIVRAISON
0,00 0,00 0,00 0,00 D√âLAI : Fin ao√ªt
Taux Base HT Montant TVA
168,66 843,34 20,00
Port HT
Total TTC
Acomptes
Net √† payer0,00
1 023,00
343,00
680,00 ‚Ç¨"""

def get_expected_simple_data():
    """R√©cup√©rer les donn√©es attendues simplifi√©es"""
    return {
        "client": {
            "nom": "Mr et Me DEPYPER CHRISTIAN & ANNIE",
            "adresse": "285 RUE DE WALLON CAPPEL, CAMPING DES 8 RUES, 59190 WALLON CAPPEL",
            "code_client": "DEPYCHWAL"
        },
        "commande": {
            "numero": "CM00009568",
            "date": "15/07/2025",
            "commercial": "P. ALINE"
        },
        "paiement": {
            "total_ttc": 1023.00,
            "acompte": 343.00
        }
    }

def main():
    """Fonction principale"""
    print("üîç Test avec prompt ultra-simple")
    print("=" * 50)
    
    try:
        # R√©cup√©rer le prompt ultra-simple
        ultra_prompt = get_ultra_simple_prompt()
        if not ultra_prompt:
            print("‚ùå Prompt ultra-simple non trouv√©")
            return False
        
        print("‚úÖ Prompt ultra-simple charg√©")
        
        # R√©cup√©rer le texte DEPYPER
        depyper_text = get_depyper_text()
        print(f"‚úÖ Texte DEPYPER charg√© ({len(depyper_text)} caract√®res)")
        
        # R√©cup√©rer les donn√©es attendues
        expected_data = get_expected_simple_data()
        print("‚úÖ Donn√©es attendues d√©finies")
        
        # Pr√©parer le prompt avec le texte
        final_prompt = ultra_prompt.replace("{text}", depyper_text)
        
        print(f"\nüìù Instructions pour le test:")
        print("-" * 40)
        print("1. Copiez le prompt ultra-simple ci-dessous")
        print("2. Testez avec votre LLM pr√©f√©r√©")
        print("3. V√©rifiez que les donn√©es sont extraites correctement")
        
        print(f"\nüéØ Donn√©es attendues (simplifi√©es):")
        print("-" * 40)
        print(f"üë§ Client: {expected_data['client']['nom']}")
        print(f"üìç Adresse: {expected_data['client']['adresse']}")
        print(f"üî¢ Code: {expected_data['client']['code_client']}")
        print(f"üìã Commande: {expected_data['commande']['numero']}")
        print(f"üìÖ Date: {expected_data['commande']['date']}")
        print(f"üë®‚Äçüíº Commercial: {expected_data['commande']['commercial']}")
        print(f"üí∞ Total TTC: {expected_data['paiement']['total_ttc']}‚Ç¨")
        print(f"üí≥ Acompte: {expected_data['paiement']['acompte']}‚Ç¨")
        
        print(f"\nüìã Prompt ultra-simple √† tester:")
        print("=" * 60)
        print(final_prompt)
        print("=" * 60)
        
        print(f"\nüí° Ce prompt est:")
        print("- ‚úÖ Ultra-simple et direct")
        print("- ‚úÖ Sans structure JSON complexe")
        print("- ‚úÖ Avec instructions claires")
        print("- ‚úÖ Sans exemples trompeurs")
        print("- ‚úÖ Force l'extraction litt√©rale")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå Erreur lors du test: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 