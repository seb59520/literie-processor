#!/usr/bin/env python3
"""
Script de test sp√©cifique pour la taille de fen√™tre 1220x800
"""

import sys
import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtCore import QTimer

# Import de l'application principale
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_1220x800():
    """Test sp√©cifique pour la taille 1220x800"""
    print("üß™ Test sp√©cifique pour la taille 1220x800")
    
    app = QApplication(sys.argv)
    
    try:
        # Importer et cr√©er l'application principale
        from app_gui import MatelasApp
        
        # Cr√©er l'application
        main_app = MatelasApp()
        
        # Forcer la taille √† 1220x800
        main_app.resize(1220, 800)
        main_app.show()
        
        print("‚úÖ Application lanc√©e avec succ√®s")
        print("üìã Configuration sp√©cifique :")
        print("   - Taille forc√©e : 1220x800")
        print("   - Cat√©gorie : Petite fen√™tre optimis√©e")
        print("   - Titre : 13px")
        print("   - Boutons : 10px")
        print("   - Labels : 9px")
        print("   - Logo : 55px")
        print("   - Espacements : 4px")
        print("   - Hauteur boutons : 25px")
        print("   - Titres groupes : 10px")
        
        print("üéØ Test en cours...")
        print("   - V√©rifiez que tous les √©l√©ments sont visibles")
        print("   - V√©rifiez que les polices sont lisibles")
        print("   - V√©rifiez que le bouton Quitter est accessible")
        print("   - V√©rifiez que la barre de statut est visible")
        print("   - V√©rifiez que les groupes sont bien espac√©s")
        
        # Timer pour afficher les informations apr√®s 2 secondes
        def show_specific_info():
            window_width = main_app.width()
            window_height = main_app.height()
            
            print(f"\nüìè Informations sp√©cifiques 1220x800 :")
            print(f"   Largeur actuelle : {window_width}px")
            print(f"   Hauteur actuelle : {window_height}px")
            
            # V√©rifier la cat√©gorie selon les nouveaux seuils
            if window_width < 1200:
                category = "Tr√®s petite fen√™tre"
                expected_font = "Tr√®s petite (12px)"
            elif window_width < 1250:
                category = "Petite fen√™tre optimis√©e (1220x800)"
                expected_font = "Petite optimis√©e (13px)"
            elif window_width < 1400:
                category = "Fen√™tre moyenne-petite"
                expected_font = "Moyenne-petite (14px)"
            elif window_width < 1600:
                category = "Fen√™tre moyenne"
                expected_font = "Moyenne (16px)"
            else:
                category = "Grande fen√™tre"
                expected_font = "Grande (18px)"
            
            print(f"   Cat√©gorie d√©tect√©e : {category}")
            print(f"   Taille de police attendue : {expected_font}")
            
            # V√©rifier la hauteur du logo
            if window_width < 1200:
                expected_logo = "50px"
            elif window_width < 1250:
                expected_logo = "55px"
            elif window_width < 1400:
                expected_logo = "65px"
            elif window_width < 1600:
                expected_logo = "80px"
            else:
                expected_logo = "100px"
            
            print(f"   Hauteur du logo attendue : {expected_logo}")
            
            # V√©rifier les espacements
            if window_height < 750:
                expected_spacing = "Tr√®s r√©duit (3px)"
            elif window_height < 800:
                expected_spacing = "R√©duit optimis√© (4px)"
            elif window_height < 850:
                expected_spacing = "Moyen (6px)"
            else:
                expected_spacing = "Standard (8px)"
            
            print(f"   Espacements attendus : {expected_spacing}")
            
            # V√©rifier la hauteur des boutons
            button_height = "25px" if window_height < 800 else "30px"
            print(f"   Hauteur des boutons : {button_height}")
            
            print("\nüîç V√©rifications sp√©cifiques pour 1220x800 :")
            print("   - Le titre 'Configuration' doit √™tre lisible (13px)")
            print("   - Le bouton 'üö™ Quitter l'application' doit √™tre visible")
            print("   - Les groupes doivent avoir des titres lisibles (10px)")
            print("   - Les boutons doivent avoir une hauteur appropri√©e (25px)")
            print("   - Les espacements doivent √™tre optimis√©s (4px)")
            print("   - La barre de statut doit √™tre visible en bas")
            print("   - Le panneau d'alertes doit √™tre accessible")
            
            # V√©rifier si la fen√™tre est enti√®rement visible
            screen = app.primaryScreen()
            screen_geometry = screen.geometry()
            window_geometry = main_app.geometry()
            
            if (window_geometry.x() >= 0 and 
                window_geometry.y() >= 0 and
                window_geometry.right() <= screen_geometry.width() and
                window_geometry.bottom() <= screen_geometry.height()):
                print("‚úÖ Fen√™tre enti√®rement visible sur l'√©cran")
            else:
                print("‚ö†Ô∏è  Fen√™tre partiellement hors √©cran")
        
        QTimer.singleShot(2000, show_specific_info)
        
        # Lancer l'application
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test : {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_1220x800() 