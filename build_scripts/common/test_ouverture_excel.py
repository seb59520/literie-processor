#!/usr/bin/env python3
"""
Script de test pour v√©rifier l'ouverture des fichiers Excel
"""

import sys
import os
import tempfile
from PyQt6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QPushButton, QLabel
from PyQt6.QtCore import QUrl

# Import de la m√©thode open_excel_file depuis app_gui
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

class TestExcelOpening(QMainWindow):
    """Fen√™tre de test pour l'ouverture des fichiers Excel"""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Test Ouverture Excel")
        self.setGeometry(100, 100, 400, 300)
        
        # Widget central
        central_widget = QMainWindow()
        self.setCentralWidget(central_widget)
        
        layout = QVBoxLayout()
        central_widget.setLayout(layout)
        
        # Label d'information
        info_label = QLabel("Test de l'ouverture des fichiers Excel")
        info_label.setStyleSheet("font-size: 14px; font-weight: bold; margin: 10px;")
        layout.addWidget(info_label)
        
        # Bouton pour cr√©er un fichier Excel de test
        create_btn = QPushButton("Cr√©er fichier Excel de test")
        create_btn.clicked.connect(self.create_test_excel)
        layout.addWidget(create_btn)
        
        # Bouton pour tester l'ouverture
        open_btn = QPushButton("Tester l'ouverture Excel")
        open_btn.clicked.connect(self.test_excel_opening)
        layout.addWidget(open_btn)
        
        # Label de statut
        self.status_label = QLabel("En attente...")
        self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #f0f0f0;")
        layout.addWidget(self.status_label)
        
        self.test_file_path = None
    
    def create_test_excel(self):
        """Cr√©e un fichier Excel de test"""
        try:
            import openpyxl
            
            # Cr√©er un workbook
            wb = openpyxl.Workbook()
            ws = wb.active
            ws.title = "Test"
            
            # Ajouter quelques donn√©es
            ws['A1'] = "Test"
            ws['B1'] = "Donn√©es"
            ws['A2'] = "Ligne 1"
            ws['B2'] = "Valeur 1"
            ws['A3'] = "Ligne 2"
            ws['B3'] = "Valeur 2"
            
            # Cr√©er un fichier temporaire
            temp_dir = tempfile.gettempdir()
            self.test_file_path = os.path.join(temp_dir, "test_excel.xlsx")
            
            # Sauvegarder le fichier
            wb.save(self.test_file_path)
            
            self.status_label.setText(f"‚úÖ Fichier Excel cr√©√©: {self.test_file_path}")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #d4edda; color: #155724;")
            
        except ImportError:
            self.status_label.setText("‚ùå openpyxl non install√©. Installer avec: pip install openpyxl")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #f8d7da; color: #721c24;")
        except Exception as e:
            self.status_label.setText(f"‚ùå Erreur cr√©ation fichier: {e}")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #f8d7da; color: #721c24;")
    
    def test_excel_opening(self):
        """Teste l'ouverture du fichier Excel"""
        if not self.test_file_path or not os.path.exists(self.test_file_path):
            self.status_label.setText("‚ùå Cr√©er d'abord un fichier Excel de test")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #f8d7da; color: #721c24;")
            return
        
        try:
            # Importer la m√©thode open_excel_file depuis app_gui
            from app_gui import MatelasApp
            
            # Cr√©er une instance temporaire pour tester la m√©thode
            app_instance = MatelasApp()
            
            # Cr√©er une URL de fichier
            file_url = QUrl.fromLocalFile(self.test_file_path)
            
            # Tester la m√©thode open_excel_file
            app_instance.open_excel_file(file_url)
            
            self.status_label.setText("‚úÖ Test d'ouverture Excel r√©ussi !")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #d4edda; color: #155724;")
            
        except Exception as e:
            self.status_label.setText(f"‚ùå Erreur ouverture Excel: {e}")
            self.status_label.setStyleSheet("margin: 10px; padding: 10px; background-color: #f8d7da; color: #721c24;")
            print(f"Erreur d√©taill√©e: {e}")

def main():
    """Fonction principale"""
    app = QApplication(sys.argv)
    
    # Cr√©er la fen√™tre de test
    test_window = TestExcelOpening()
    test_window.show()
    
    print("üß™ Test d'ouverture des fichiers Excel")
    print("1. Cliquez sur 'Cr√©er fichier Excel de test'")
    print("2. Cliquez sur 'Tester l'ouverture Excel'")
    print("3. V√©rifiez que le fichier s'ouvre correctement")
    
    return app.exec()

if __name__ == "__main__":
    main() 