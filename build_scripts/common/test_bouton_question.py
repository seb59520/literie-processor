#!/usr/bin/env python3
"""
Script de test pour v√©rifier que le bouton "?" dans le groupe Enrichissement LLM fonctionne correctement
"""

import sys
import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtCore import QTimer

# Import de l'application principale
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_bouton_question():
    """Test du bouton "?" dans le groupe Enrichissement LLM"""
    print("üß™ Test du bouton '?' dans le groupe Enrichissement LLM")
    
    app = QApplication(sys.argv)
    
    try:
        # Importer et cr√©er l'application principale
        from app_gui import MatelasApp
        
        # Cr√©er l'application
        main_app = MatelasApp()
        main_app.show()
        
        print("‚úÖ Application lanc√©e avec succ√®s")
        print("üìã Instructions de test :")
        print("   1. Le bouton '?' doit √™tre visible √† c√¥t√© du s√©lecteur de Provider")
        print("   2. Le bouton doit √™tre bleu et circulaire (24x24 pixels)")
        print("   3. Le bouton doit √™tre plus compact que l'ancien '‚ùì Aide Cl√©s API'")
        print("   4. Cliquer sur le bouton doit afficher l'aide pour les cl√©s API")
        print("   5. L'espace dans le groupe Enrichissement LLM doit √™tre optimis√©")
        print("üéØ Test en cours...")
        print("   - V√©rifiez que le bouton '?' est visible et bien positionn√©")
        print("   - Cliquez sur le bouton pour tester l'aide")
        print("   - V√©rifiez que l'espace est mieux utilis√©")
        
        # Attendre 2 secondes puis afficher les informations
        def print_info():
            print("üìè Informations du bouton '?' :")
            print("   Taille : 24x24 pixels")
            print("   Forme : Cercle parfait (border-radius: 12px)")
            print("   Couleur : Bleu (#3498db)")
            print("   Couleur hover : Bleu fonc√© (#2980b9)")
            print("   Position : √Ä c√¥t√© du s√©lecteur de Provider")
            print("   Fonction : Affiche l'aide pour les cl√©s API")
            print("‚úÖ Test termin√© - V√©rifiez manuellement le comportement")
        
        QTimer.singleShot(2000, print_info)
        
        # Lancer l'application
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test : {e}")
        sys.exit(1)

if __name__ == "__main__":
    test_bouton_question() 