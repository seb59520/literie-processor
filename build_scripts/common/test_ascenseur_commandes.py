#!/usr/bin/env python3
"""
Script de test pour v√©rifier l'ascenseur des commandes client
"""

import sys
import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtCore import QTimer

# Import de l'application principale
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_ascenseur_commandes():
    """Test de l'ascenseur des commandes client"""
    print("üß™ Test de l'ascenseur des commandes client")
    
    app = QApplication(sys.argv)
    
    try:
        # Importer et cr√©er l'application principale
        from app_gui import MatelasApp
        
        # Cr√©er l'application
        main_app = MatelasApp()
        main_app.show()
        
        print("‚úÖ Application lanc√©e avec succ√®s")
        print("üìã Instructions de test :")
        print("   1. Cliquez sur 'S√©lectionner des fichiers'")
        print("   2. S√©lectionnez 4 fichiers PDF ou plus")
        print("   3. V√©rifiez que seules 3 commandes client sont visibles")
        print("   4. V√©rifiez qu'un ascenseur appara√Æt √† droite")
        print("   5. Utilisez l'ascenseur pour voir les autres commandes")
        print("   6. V√©rifiez que le message informatif s'affiche")
        print("")
        print("üéØ Test en cours...")
        print("   - S√©lectionnez plusieurs fichiers pour tester l'ascenseur")
        print("   - V√©rifiez que l'interface reste compacte")
        print("   - Testez le d√©filement avec l'ascenseur")
        
        # Timer pour afficher des informations suppl√©mentaires
        def show_info():
            print("")
            print("üìä Comportement attendu :")
            print("   - Maximum 3 commandes visibles √† la fois")
            print("   - Ascenseur vertical si plus de 3 fichiers")
            print("   - Message informatif sous l'ascenseur")
            print("   - Interface compacte et organis√©e")
            print("")
            print("üîß Fonctionnalit√©s test√©es :")
            print("   - Limitation d'affichage √† 3 commandes")
            print("   - Ascenseur fonctionnel")
            print("   - Message informatif")
            print("   - Hauteur adaptative")
        
        QTimer.singleShot(3000, show_info)
        
        # Lancer l'application
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå Erreur lors du lancement : {e}")
        sys.exit(1)

if __name__ == "__main__":
    test_ascenseur_commandes() 