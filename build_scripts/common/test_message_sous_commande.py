#!/usr/bin/env python3
"""
Script de test pour v√©rifier que le message informatif appara√Æt sous le groupe Commande client
"""

import sys
import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtCore import QTimer

# Import de l'application principale
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_message_sous_commande():
    """Test du positionnement du message informatif"""
    print("üß™ Test du positionnement du message informatif")
    
    app = QApplication(sys.argv)
    
    try:
        # Importer et cr√©er l'application principale
        from app_gui import MatelasApp
        
        # Cr√©er l'application
        main_app = MatelasApp()
        main_app.show()
        
        print("‚úÖ Application lanc√©e avec succ√®s")
        print("üìã Instructions de test :")
        print("   1. Cliquez sur 'S√©lectionner des fichiers'")
        print("   2. S√©lectionnez 4 fichiers PDF ou plus")
        print("   3. V√©rifiez que le message informatif appara√Æt SOUS le groupe 'Commande client'")
        print("   4. V√©rifiez que le message ne se superpose pas avec les champs de saisie")
        print("   5. V√©rifiez que l'ascenseur fonctionne correctement")
        print("")
        print("üéØ Test en cours...")
        print("   - S√©lectionnez plusieurs fichiers pour tester")
        print("   - V√©rifiez le positionnement du message")
        print("   - Testez l'ascenseur")
        
        # Timer pour afficher des informations suppl√©mentaires
        def show_info():
            print("")
            print("üìä Comportement attendu :")
            print("   - Message sous le groupe 'Commande client'")
            print("   - Pas de superposition avec les champs")
            print("   - Ascenseur fonctionnel")
            print("   - Interface claire et organis√©e")
            print("")
            print("üîß Fonctionnalit√©s test√©es :")
            print("   - Positionnement correct du message")
            print("   - Nettoyage des anciens messages")
            print("   - Interface non encombr√©e")
            print("   - Navigation fluide")
        
        QTimer.singleShot(3000, show_info)
        
        # Lancer l'application
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå Erreur lors du lancement : {e}")
        sys.exit(1)

if __name__ == "__main__":
    test_message_sous_commande() 