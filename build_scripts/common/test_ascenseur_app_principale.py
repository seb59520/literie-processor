#!/usr/bin/env python3
"""
Script de test pour v√©rifier l'ascenseur dans l'application principale
"""

import sys
import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtCore import QTimer

# Import de l'application principale
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_ascenseur_app_principale():
    """Test de l'ascenseur dans l'application principale"""
    print("üß™ Test de l'ascenseur dans l'application principale")
    
    app = QApplication(sys.argv)
    
    try:
        # Importer et cr√©er l'application principale
        from app_gui import MatelasApp
        
        # Cr√©er l'application
        main_app = MatelasApp()
        main_app.show()
        
        print("‚úÖ Application lanc√©e avec succ√®s")
        print("üìã Instructions de test :")
        print("   1. Cliquez sur 'S√©lectionner des fichiers'")
        print("   2. S√©lectionnez 4 fichiers PDF ou plus")
        print("   3. V√©rifiez que l'ascenseur appara√Æt dans le groupe 'Commande client'")
        print("   4. V√©rifiez que vous pouvez faire d√©filer pour voir tous les champs")
        print("   5. V√©rifiez que le message informatif appara√Æt sous le groupe")
        print("")
        print("üéØ Test en cours...")
        print("   - S√©lectionnez plusieurs fichiers pour tester")
        print("   - V√©rifiez que l'ascenseur fonctionne")
        print("   - Testez le d√©filement")
        print("   - V√©rifiez le positionnement du message")
        
        # Timer pour afficher des informations suppl√©mentaires
        def show_info():
            print("")
            print("üìä Comportement attendu :")
            print("   - Ascenseur visible quand plus de 3 fichiers")
            print("   - D√©filement fluide")
            print("   - Message sous le groupe commande client")
            print("   - Interface claire et organis√©e")
            print("")
            print("üîß Param√®tres ajust√©s :")
            print("   - Hauteur maximale : 105px (3 lignes)")
            print("   - Ascenseur forc√© si > 3 fichiers")
            print("   - Message positionn√© correctement")
            print("   - Nettoyage automatique des anciens messages")
        
        QTimer.singleShot(3000, show_info)
        
        # Lancer l'application
        sys.exit(app.exec())
        
    except Exception as e:
        print(f"‚ùå Erreur lors du lancement : {e}")
        sys.exit(1)

if __name__ == "__main__":
    test_ascenseur_app_principale() 