#!/usr/bin/env python3
"""
Script de test pour v√©rifier la correction de l'erreur semaine_ref_spin/annee_ref_spin
"""

import os
import re
from datetime import datetime

def test_correction_attributs_manquants():
    """Teste que les r√©f√©rences aux attributs supprim√©s sont corrig√©es"""
    
    print("üîç TEST DE LA CORRECTION DES ATTRIBUTS MANQUANTS")
    print("=" * 60)
    
    fichier_gui = "app_gui.py"
    
    if not os.path.exists(fichier_gui):
        print(f"‚ùå Fichier {fichier_gui} non trouv√©")
        return False
    
    try:
        with open(fichier_gui, 'r', encoding='utf-8') as f:
            contenu = f.read()
        
        # V√©rifier que les r√©f√©rences probl√©matiques ont √©t√© corrig√©es
        corrections = [
            # V√©rifier que l'ancien code probl√©matique a √©t√© supprim√©
            ("Ancien code semaine_ref_spin.value() supprim√©", "self.semaine_ref_spin.value()", False),
            ("Ancien code annee_ref_spin.value() supprim√©", "self.annee_ref_spin.value()", False),
            
            # V√©rifier que le nouveau code a √©t√© ajout√©
            ("Import datetime ajout√©", "from datetime import datetime", True),
            ("Calcul semaine actuelle", "datetime.now().isocalendar()[1]", True),
            ("Calcul ann√©e actuelle", "datetime.now().year", True),
            
            # V√©rifier que les variables sont bien d√©finies
            ("Variable semaine_ref d√©finie", "semaine_ref = datetime.now().isocalendar()[1]", True),
            ("Variable annee_ref d√©finie", "annee_ref = datetime.now().year", True),
            ("Variable semaine_prod d√©finie", "semaine_prod = semaine_ref", True),
            ("Variable annee_prod d√©finie", "annee_prod = annee_ref", True),
        ]
        
        print("üìã V√©rification des corrections:")
        for nom, code, doit_exister in corrections:
            if doit_exister:
                if code in contenu:
                    print(f"   ‚úÖ {nom}")
                else:
                    print(f"   ‚ùå {nom} - Code manquant")
            else:
                if code not in contenu:
                    print(f"   ‚úÖ {nom} - Supprim√© avec succ√®s")
                else:
                    print(f"   ‚ùå {nom} - Encore pr√©sent")
        
        # V√©rifier le contexte de la correction
        print("\nüîç V√©rification du contexte de la correction:")
        
        # Chercher le bloc de code corrig√©
        pattern_correction = r"# R√©cup√©rer les param√®tres de r√©f√©rence.*?semaine_prod = semaine_ref"
        match = re.search(pattern_correction, contenu, re.DOTALL)
        
        if match:
            print("   ‚úÖ Bloc de code corrig√© trouv√©")
            code_corrige = match.group()
            
            # V√©rifier que le code contient les bonnes parties
            if "datetime.now().isocalendar()[1]" in code_corrige:
                print("   ‚úÖ Calcul semaine avec datetime.now()")
            else:
                print("   ‚ùå Calcul semaine incorrect")
                
            if "datetime.now().year" in code_corrige:
                print("   ‚úÖ Calcul ann√©e avec datetime.now()")
            else:
                print("   ‚ùå Calcul ann√©e incorrect")
        else:
            print("   ‚ùå Bloc de code corrig√© non trouv√©")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la v√©rification: {e}")
        return False

def test_simulation_traitement():
    """Simule le traitement pour v√©rifier que l'erreur est corrig√©e"""
    
    print("\nüß™ SIMULATION DU TRAITEMENT")
    print("=" * 40)
    
    try:
        # Simuler le code corrig√©
        from datetime import datetime
        
        # R√©cup√©rer les param√®tres de r√©f√©rence (semaine et ann√©e actuelles)
        semaine_ref = datetime.now().isocalendar()[1]
        annee_ref = datetime.now().year
        
        # Pour la compatibilit√© avec l'ancien code, utiliser les valeurs actuelles
        semaine_prod = semaine_ref
        annee_prod = annee_ref
        
        print(f"‚úÖ Semaine de r√©f√©rence : {semaine_ref}")
        print(f"‚úÖ Ann√©e de r√©f√©rence : {annee_ref}")
        print(f"‚úÖ Semaine de production : {semaine_prod}")
        print(f"‚úÖ Ann√©e de production : {annee_prod}")
        
        # V√©rifier que les valeurs sont coh√©rentes
        if semaine_prod == semaine_ref and annee_prod == annee_ref:
            print("‚úÖ Coh√©rence des variables v√©rifi√©e")
        else:
            print("‚ùå Incoh√©rence des variables d√©tect√©e")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la simulation: {e}")
        return False

def afficher_resume_correction():
    """Affiche un r√©sum√© de la correction appliqu√©e"""
    
    print("\nüìù R√âSUM√â DE LA CORRECTION APPLIQU√âE")
    print("=" * 50)
    
    print("""
üîß PROBL√àME IDENTIFI√â :
   ‚Ä¢ Erreur : 'MatelasApp' object has no attribute 'semaine_ref_spin'
   ‚Ä¢ Cause : Le code essayait d'acc√©der aux QSpinBox supprim√©s
   ‚Ä¢ Localisation : Lignes 3920-3921 dans app_gui.py

‚úÖ CORRECTION APPLIQU√âE :

AVANT (code probl√©matique) :
```python
# R√©cup√©rer les param√®tres de r√©f√©rence (semaine et ann√©e actuelles)
semaine_ref = self.semaine_ref_spin.value()  # ‚ùå Attribut supprim√©
annee_ref = self.annee_ref_spin.value()      # ‚ùå Attribut supprim√©
```

APR√àS (code corrig√©) :
```python
# R√©cup√©rer les param√®tres de r√©f√©rence (semaine et ann√©e actuelles)
from datetime import datetime
semaine_ref = datetime.now().isocalendar()[1]  # ‚úÖ Calcul automatique
annee_ref = datetime.now().year                # ‚úÖ Calcul automatique
```

üéØ AVANTAGES DE LA CORRECTION :
   ‚Ä¢ Plus d'erreur d'attribut manquant
   ‚Ä¢ Valeurs toujours √† jour (calcul√©es automatiquement)
   ‚Ä¢ Code plus robuste et maintenable
   ‚Ä¢ Coh√©rence avec l'interface visuelle
   ‚Ä¢ Pas de d√©pendance aux widgets supprim√©s
""")

def main():
    """Fonction principale"""
    
    print("üéØ TEST DE LA CORRECTION DE L'ERREUR SEMAINE_REF_SPIN")
    print("=" * 70)
    
    # Test 1: V√©rification des corrections
    if not test_correction_attributs_manquants():
        print("‚ùå Test des corrections √©chou√©")
        return False
    
    # Test 2: Simulation du traitement
    if not test_simulation_traitement():
        print("‚ùå Test de simulation √©chou√©")
        return False
    
    # Test 3: R√©sum√© de la correction
    afficher_resume_correction()
    
    print("\nüéâ TOUS LES TESTS SONT PASS√âS AVEC SUCC√àS !")
    print("‚úÖ L'erreur 'semaine_ref_spin' est corrig√©e")
    print("‚úÖ Le traitement peut maintenant fonctionner correctement")
    
    return True

if __name__ == "__main__":
    main()

