#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de test pour la g√©n√©ration d'exemples de devis vari√©s
"""

import sys
import os
import json
import random
from datetime import datetime, timedelta

# Ajouter le r√©pertoire au path pour importer les modules
sys.path.append(os.path.dirname(__file__))

def generate_random_devis_example():
    """G√©n√©rer un exemple de devis al√©atoire pour les tests"""
    # Donn√©es al√©atoires pour varier les exemples
    clients = [
        ("Mr et Me LAGADEC HELENE", "25 RUE DE L'√âGLISE, 59670 BAVINCHOVE", "LAGAHEBAV"),
        ("Mr DUPONT JEAN", "15 AVENUE DE LA PAIX, 59000 LILLE", "DUPOJEALIL"),
        ("Me MARTIN SOPHIE", "8 RUE DU COMMERCE, 59100 ROUBAIX", "MARTSOPROU"),
        ("Mr et Me DURAND PIERRE", "42 BOULEVARD VICTOR HUGO, 59200 TOURCOING", "DURAPIEVIC"),
        ("Mr LEROY ANTOINE", "3 PLACE DE LA R√âPUBLIQUE, 59300 VALENCIENNES", "LEROANTPLA")
    ]
    
    produits = [
        ("LITERIE 160/200/59 CM JUMEAUX SUR PIEDS", [
            "SOMMIERS JUMEAUX RELAXATION MOTORIS√âE 5 PLIS PETITE T√äTI√àRE",
            "M√âTRAGE PVC SARANO CAMEL",
            "DOSSERET GALB√â COINS VIFS 160/90 BASE SOMMIERS",
            "JEU DE 4 PIEDS CYLINDRE VERNI NATUREL 20 CM + 2 PIEDS CENTRAUX + PATINS FEUTRES",
            "MATELAS JUMEAUX - MOUSSE RAINUR√âE 7 ZONES DIFF√âRENCI√âES M√âDIUM (50KG/M3)"
        ]),
        ("LITERIE 140/190/59 CM DOUBLE SUR PIEDS", [
            "SOMMIER DOUBLE RELAXATION MOTORIS√âE 5 PLIS GRANDE T√äTI√àRE",
            "M√âTRAGE PVC SARANO GRIS",
            "DOSSERET GALB√â COINS VIFS 140/90 BASE SOMMIERS",
            "JEU DE 4 PIEDS CYLINDRE VERNI NATUREL 20 CM + PATINS FEUTRES",
            "MATELAS DOUBLE - MOUSSE VISCO√âLASTIQUE 7 ZONES DIFF√âRENCI√âES FERME (60KG/M3)"
        ]),
        ("LITERIE 90/200/59 CM SIMPLE SUR PIEDS", [
            "SOMMIER SIMPLE RELAXATION MOTORIS√âE 5 PLIS PETITE T√äTI√àRE",
            "M√âTRAGE PVC SARANO BLANC",
            "DOSSERET DROIT COINS VIFS 90/90 BASE SOMMIERS",
            "JEU DE 4 PIEDS CYLINDRE VERNI NATUREL 20 CM + PATINS FEUTRES",
            "MATELAS SIMPLE - LATEX NATUREL 7 ZONES DIFF√âRENCI√âES DOUX (70KG/M3)"
        ])
    ]
    
    remises = [
        ("REMISE 50% SOLDES MOD√àLE D'EXPOSITION", -1295.00),
        ("REMISE 30% FIN DE S√âRIE", -850.00),
        ("REMISE 20% PREMI√àRE COMMANDE", -450.00),
        ("REMISE 15% CLIENT FID√àLE", -320.00),
        ("REMISE 10% PAIEMENT COMPTANT", -180.00)
    ]
    
    # S√©lection al√©atoire
    client = random.choice(clients)
    produit = random.choice(produits)
    remise = random.choice(remises)
    
    # Date al√©atoire dans les 30 derniers jours
    date_commande = datetime.now() - timedelta(days=random.randint(0, 30))
    
    # Num√©ro de commande al√©atoire
    num_commande = f"CM{random.randint(100000, 999999)}"
    
    # Montants al√©atoires
    base_ht = random.randint(1500, 3000)
    tva = base_ht * 0.20
    total_ttc = base_ht + tva
    acompte = random.randint(500, 1000)
    net_a_payer = total_ttc - acompte
    
    # G√©n√©rer le devis
    example_text = f"""DEVIS LITERIE WESTELYNCK

SAS Literie Westelynck
Capital : 23 100 Euros
525 RD 642 - 59190 BORRE
T√©l : 03.28.48.04.19
Email : contact@lwest.fr
SIRET : 429 352 891 00015
APE : 3103Z
CEE : FR50 429 352 891
Banque : Cr√©dit Agricole d'Hazebrouck
IBAN : FR76 1670 6050 1650 4613 2602 341

CLIENT :
{client[0]}
{client[1]}
Code client : {client[2]}

COMMANDE N¬∞ {num_commande}
Date : {date_commande.strftime('%d/%m/%Y')}
Commercial : P. ALINE
Origine : COMMANDE

LIVRAISON : ENL√àVEMENT PAR VOS SOINS

{produit[0]}

"""
    
    # Ajouter les produits
    for i, prod in enumerate(produit[1], 1):
        example_text += f"{i}. {prod}\n   Quantit√© : {random.randint(1, 3)}\n\n"
    
    # Ajouter la remise
    example_text += f"{len(produit[1]) + 1}. {remise[0]}\n   Montant : {remise[1]:.2f}‚Ç¨\n\n"
    
    # Ajouter la remise enl√®vement
    remise_enlevement = random.randint(20, 100)
    example_text += f"{len(produit[1]) + 2}. REMISE : 5% ENL√àVEMENT PAR VOS SOINS\n   Montant : -{remise_enlevement:.2f}‚Ç¨\n\n"
    
    # Conditions de paiement et totaux
    example_text += f"""CONDITIONS DE PAIEMENT :
ACOMPTE DE {acompte} ‚Ç¨ EN CB LA COMMANDE ET SOLDE DE {net_a_payer:.0f} ‚Ç¨ √Ä L'ENL√àVEMENT

PORT HT : 0,00‚Ç¨
BASE HT : {base_ht:.2f}‚Ç¨
TVA 20% : {tva:.2f}‚Ç¨
TOTAL TTC : {total_ttc:.2f}‚Ç¨
ACOMPTE : {acompte:.2f}‚Ç¨
NET √Ä PAYER : {net_a_payer:.2f}‚Ç¨"""
    
    return example_text

def test_generation_exemples():
    """Test de g√©n√©ration d'exemples vari√©s"""
    print("üé≤ Test de g√©n√©ration d'exemples de devis vari√©s")
    print("=" * 60)
    
    # G√©n√©rer plusieurs exemples
    examples = []
    for i in range(5):
        print(f"\nüìã Exemple {i+1}:")
        print("-" * 40)
        
        example = generate_random_devis_example()
        examples.append(example)
        
        # Afficher les informations cl√©s
        lines = example.split('\n')
        
        # Extraire les informations importantes
        client_line = None
        commande_line = None
        produit_line = None
        
        for line in lines:
            if "CLIENT :" in line:
                client_line = lines[lines.index(line) + 1].strip()
            elif "COMMANDE N¬∞" in line:
                commande_line = line.strip()
            elif "LITERIE" in line and "CM" in line:
                produit_line = line.strip()
                break
        
        print(f"üë§ Client: {client_line}")
        print(f"üìã Commande: {commande_line}")
        print(f"üõèÔ∏è Produit: {produit_line}")
        
        # V√©rifier la vari√©t√©
        if i > 0:
            # Comparer avec les exemples pr√©c√©dents
            is_different = False
            for prev_example in examples[:-1]:
                if example != prev_example:
                    is_different = True
                    break
            
            if is_different:
                print("‚úÖ Exemple diff√©rent des pr√©c√©dents")
            else:
                print("‚ö†Ô∏è Exemple identique aux pr√©c√©dents")
    
    # Test de vari√©t√© globale
    print(f"\nüìä Analyse de vari√©t√©:")
    print(f"   ‚Ä¢ Nombre d'exemples g√©n√©r√©s: {len(examples)}")
    
    unique_examples = set(examples)
    print(f"   ‚Ä¢ Exemples uniques: {len(unique_examples)}")
    
    if len(unique_examples) == len(examples):
        print("‚úÖ Tous les exemples sont diff√©rents")
    else:
        print(f"‚ö†Ô∏è {len(examples) - len(unique_examples)} exemples identiques d√©tect√©s")
    
    # Test de structure
    print(f"\nüîç Test de structure:")
    for i, example in enumerate(examples):
        required_sections = [
            "DEVIS LITERIE WESTELYNCK",
            "CLIENT :",
            "COMMANDE N¬∞",
            "LITERIE",
            "CONDITIONS DE PAIEMENT :",
            "TOTAL TTC :"
        ]
        
        missing_sections = []
        for section in required_sections:
            if section not in example:
                missing_sections.append(section)
        
        if missing_sections:
            print(f"   ‚ùå Exemple {i+1}: Sections manquantes: {missing_sections}")
        else:
            print(f"   ‚úÖ Exemple {i+1}: Structure compl√®te")
    
    return len(unique_examples) == len(examples)

def main():
    """Fonction principale"""
    print("üé≤ Test de g√©n√©ration d'exemples de devis")
    print("=" * 60)
    
    try:
        success = test_generation_exemples()
        
        print(f"\nüéâ Test termin√© !")
        print("=" * 60)
        
        if success:
            print("‚úÖ G√âN√âRATION D'EXEMPLES FONCTIONNELLE")
            print("   ‚Ä¢ Tous les exemples sont diff√©rents")
            print("   ‚Ä¢ Structure compl√®te maintenue")
            print("   ‚Ä¢ Vari√©t√© des donn√©es assur√©e")
        else:
            print("‚ö†Ô∏è PROBL√àMES D√âTECT√âS")
            print("   ‚Ä¢ Certains exemples sont identiques")
            print("   ‚Ä¢ V√©rifiez la g√©n√©ration al√©atoire")
        
        return success
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 