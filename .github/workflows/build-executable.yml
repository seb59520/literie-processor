name: Build Executables

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_gui.txt
        pip install pyinstaller
    
    - name: Clean project for executable
      run: |
        python clean_for_executable.py
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name=MatelasApp-Windows ^
          --icon=assets/lit-double.ico ^
          --add-data="backend;backend" ^
          --add-data="config;config" ^
          --add-data="template;template" ^
          --add-data="assets;assets" ^
          --add-data="matelas_config.json;." ^
          --exclude-module=matplotlib ^
          --exclude-module=pandas ^
          --exclude-module=numpy ^
          --exclude-module=scipy ^
          --exclude-module=PIL ^
          --clean --noconfirm ^
          app_gui.py
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: MatelasApp-Windows
        path: dist/MatelasApp-Windows.exe

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_gui.txt
        pip install pyinstaller
    
    - name: Clean project for executable
      run: |
        python clean_for_executable.py
    
    - name: Build macOS executable
      run: |
        pyinstaller --onefile --windowed --name=MatelasApp-macOS \
          --icon=assets/lit-double.ico \
          --add-data="backend:backend" \
          --add-data="config:config" \
          --add-data="template:template" \
          --add-data="assets:assets" \
          --add-data="matelas_config.json:." \
          --exclude-module=matplotlib \
          --exclude-module=pandas \
          --exclude-module=numpy \
          --exclude-module=scipy \
          --exclude-module=PIL \
          --clean --noconfirm \
          app_gui.py
    
    - name: Upload macOS executable
      uses: actions/upload-artifact@v4
      with:
        name: MatelasApp-macOS
        path: dist/MatelasApp-macOS

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libxkbcommon-x11-0 libxcb-xinerama0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_gui.txt
        pip install pyinstaller
    
    - name: Clean project for executable
      run: |
        python clean_for_executable.py
    
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --name=MatelasApp-Linux \
          --add-data="backend:backend" \
          --add-data="config:config" \
          --add-data="template:template" \
          --add-data="assets:assets" \
          --add-data="matelas_config.json:." \
          --exclude-module=matplotlib \
          --exclude-module=pandas \
          --exclude-module=numpy \
          --exclude-module=scipy \
          --exclude-module=PIL \
          --clean --noconfirm \
          app_gui.py
    
    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: MatelasApp-Linux
        path: dist/MatelasApp-Linux

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          MatelasApp-Windows/MatelasApp-Windows.exe
          MatelasApp-macOS/MatelasApp-macOS
          MatelasApp-Linux/MatelasApp-Linux
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}